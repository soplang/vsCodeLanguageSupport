// Test: Comparison Assignment
// This test focuses on assigning the results of comparison operations to variables

qor("Testing comparison operations in assignments:")

// Integer comparisons
qor("Integer comparisons:")
abn a = 5
abn b = 3
qor("  a = " + a + ", b = " + b)

// Direct integer comparison assignments with door type
door result1 = (a > b)
qor("  door result1 = a > b: " + result1)

door result2 = (a < b)
qor("  door result2 = a < b: " + result2)

door result3 = (a == b)
qor("  door result3 = a == b: " + result3)

door result4 = (a != b)
qor("  door result4 = a != b: " + result4)

door result5 = (a >= b)
qor("  door result5 = a >= b: " + result5)

door result6 = (a <= b)
qor("  door result6 = a <= b: " + result6)

// Decimal comparisons
qor("\nDecimal comparisons:")
jajab x = 5.5
jajab y = 3.25
qor("  x = " + x + ", y = " + y)

// Direct decimal comparison assignments with door type
door result7 = (x > y)
qor("  door result7 = x > y: " + result7)

door result8 = (x < y)
qor("  door result8 = x < y: " + result8)

door result9 = (x == y)
qor("  door result9 = x == y: " + result9)

door result10 = (x != y)
qor("  door result10 = x != y: " + result10)

// Mixed type comparisons
qor("\nMixed integer and decimal comparisons:")
door result11 = (a > y)
qor("  door result11 = a > y: " + result11)

door result12 = (x == a)
qor("  door result12 = x == a: " + result12)

// Test with bool (boolean) type
qor("\nBoolean type assignments:")
bool isGreater = (a > b)
qor("  bool isGreater = a > b: " + isGreater)

bool isLess = (a < b)
qor("  bool isLess = a < b: " + isLess)

bool isEqual = (a == b)
qor("  bool isEqual = a == b: " + isEqual)

bool isNotEqual = (a != b)
qor("  bool isNotEqual = a != b: " + isNotEqual)

bool isDecimalGreater = (x > y)
qor("  bool isDecimalGreater = x > y: " + isDecimalGreater)

// Test with complex expressions
qor("\nComplex expressions:")
door complex1 = ((a > b) && (a != b))
qor("  door complex1 = (a > b) && (a != b): " + complex1)

door complex2 = ((a < b) || (a == 5))
qor("  door complex2 = (a < b) || (a == 5): " + complex2)

door complex3 = ((x > y) && (a == 5))
qor("  door complex3 = (x > y) && (a == 5): " + complex3)

// Test with variable reassignment
qor("\nVariable reassignment:")
door test = been
qor("  Initial test value: " + test)
test = a > b
qor("  After test = a > b: " + test)
test = x < y
qor("  After test = x < y: " + test)
