// Test: String Contains Method
// This test demonstrates leeyahay() to check for substrings within strings

qor("Testing string contains (leeyahay) method:")

// Basic substring check
door magac = "Barwaaqo"
door match1 = magac.leeyahay("waa")    // Should be true (run)
door match2 = magac.leeyahay("bilow")  // Should be false (been)

qor("Basic tests:")
qor("  String: " + magac)
qor("  Has 'waa': " + match1)
qor("  Has 'bilow': " + match2)

// Case sensitivity test
door sentence = "Soplang waa luqad wacan"
door match3 = sentence.leeyahay("waa")  // Should be true
door match4 = sentence.leeyahay("WAA")  // Should be false (case-sensitive)

qor("Case sensitivity:")
qor("  String: " + sentence)
qor("  Has 'waa': " + match3)
qor("  Has 'WAA': " + match4)

// Empty string test
door empty = ""
door match5 = magac.leeyahay("")        // Should be true
door match6 = empty.leeyahay("")        // Should be true
door match7 = empty.leeyahay("test")    // Should be false

qor("Empty string tests:")
qor("  Empty string contains '': " + match6)
qor("  Normal string contains '': " + match5)
qor("  Empty string contains 'test': " + match7)

// Position tests
door match8 = sentence.leeyahay("Soplang")  // At start
door match9 = sentence.leeyahay("wacan")    // At end

qor("Position tests:")
qor("  Starts with 'Soplang': " + match8)
qor("  Ends with 'wacan': " + match9)

// Practical application
door email = "user@example.com"
door valid_email = email.leeyahay("@")

qor("Practical application:")
qor("  Email: " + email)
qor("  Contains '@': " + valid_email)

haddii (valid_email) {
    qor("  Email format is valid")
} ugudambeyn {
    qor("  Email format is invalid - missing @")
}

qor("\nString contains tests completed!")
