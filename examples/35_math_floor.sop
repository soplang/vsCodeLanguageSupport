// Test: Math Floor Function (daji)
// This test demonstrates the daji() function which rounds down to the nearest integer

qor("Testing math floor function (daji):")

// Basic positive numbers
qor("\nPositive numbers:")
qor("  daji(3.8) = " + daji(3.8))       // Should be 3
qor("  daji(5.1) = " + daji(5.1))       // Should be 5
qor("  daji(7.999) = " + daji(7.999))   // Should be 7

// Integers (should remain the same)
qor("\nIntegers:")
qor("  daji(5) = " + daji(5))           // Should be 5
qor("  daji(0) = " + daji(0))           // Should be 0

// Negative numbers (important edge case!)
qor("\nNegative numbers:")
qor("  daji(-2.4) = " + daji(-2.4))     // Should be -3
qor("  daji(-1.01) = " + daji(-1.01))   // Should be -2
qor("  daji(-5.9) = " + daji(-5.9))     // Should be -6

// Edge cases
qor("\nEdge cases:")
qor("  daji(0.1) = " + daji(0.1))       // Should be 0
qor("  daji(-0.1) = " + daji(-0.1))     // Should be -1
qor("  daji(0.999) = " + daji(0.999))   // Should be 0

// Dynamic variables
qor("\nWith variables:")
door x = 4.7
door y = -3.2
qor("  x = " + x)
qor("  y = " + y)
qor("  daji(x) = " + daji(x))           // Should be 4
qor("  daji(y) = " + daji(y))           // Should be -4

// Practical examples
qor("\nPractical examples:")

// Example: calculating how many whole days in a number of hours
door hours = 50.5
door days = daji(hours / 24)
qor("  " + hours + " hours = " + days + " whole days")

// Example: calculating how many full pages needed for n items with k items per page
door items = 27
door itemsPerPage = 5
door remain = items % itemsPerPage
door extra = 0

haddii (remain > 0) {
    extra = 1
}

door pages = daji(items / itemsPerPage) + extra
qor("  " + items + " items with " + itemsPerPage + " per page = " + pages + " pages")

qor("\nMath floor tests completed!")
