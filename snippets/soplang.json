{
  "Print Statement": {
    "prefix": "qor",
    "body": [
      "qor(${1:fariin})$0"
    ],
    "description": "Print statement - outputs text to console"
  },
  "Variable Declaration": {
    "prefix": "door",
    "body": [
      "door ${1:magac} = ${2:qiimo}$0"
    ],
    "description": "Dynamic variable declaration"
  },
  "Constant Declaration": {
    "prefix": "madoor",
    "body": [
      "madoor ${1:magac} = ${2:qiimo}$0"
    ],
    "description": "Constant variable declaration"
  },
  "Integer Type": {
    "prefix": "abn",
    "body": [
      "abn ${1:magac} = ${2:10}$0"
    ],
    "description": "Integer type declaration"
  },
  "Decimal Type": {
    "prefix": "jajab",
    "body": [
      "jajab ${1:magac} = ${2:3.14}$0"
    ],
    "description": "Decimal/float type declaration"
  },
  "String Type": {
    "prefix": "qoraal",
    "body": [
      "qoraal ${1:magac} = \"${2:text}\"$0"
    ],
    "description": "String type declaration"
  },
  "Boolean Type": {
    "prefix": "bool",
    "body": [
      "bool ${1:magac} = ${2|run,been|}$0"
    ],
    "description": "Boolean type declaration"
  },
  "List Type": {
    "prefix": "liis",
    "body": [
      "liis ${1:magac} = [${2:qiimayaal}]$0"
    ],
    "description": "List/array type declaration"
  },
  "Object Type": {
    "prefix": "walax",
    "body": [
      "walax ${1:magac} = {",
      "\t${2:key}: ${3:value},$0",
      "}"
    ],
    "description": "Object type declaration"
  },
  "If Statement": {
    "prefix": "haddii",
    "body": [
      "haddii (${1:shuruud}) {",
      "\t$2",
      "}"
    ],
    "description": "If statement"
  },
  "Else If Statement": {
    "prefix": "haddii_kale",
    "body": [
      "haddii_kale (${1:shuruud}) {",
      "\t$2",
      "}"
    ],
    "description": "Else if statement"
  },
  "Else Statement": {
    "prefix": "ugudambeyn",
    "body": [
      "ugudambeyn {",
      "\t$1",
      "}"
    ],
    "description": "Else statement"
  },
  "Switch Statement": {
    "prefix": "dooro",
    "body": [
      "dooro (${1:expression}) {",
      "\txaalad ${2:value} {",
      "\t\t$3",
      "\t}",
      "\tugudambeyn {",
      "\t\t$4",
      "\t}",
      "}"
    ],
    "description": "Switch statement"
  },
  "Case Clause": {
    "prefix": "xaalad",
    "body": [
      "xaalad ${1:value} {",
      "\t$2",
      "}"
    ],
    "description": "Case clause for switch statement"
  },
  "For Loop": {
    "prefix": "kuceli",
    "body": [
      "kuceli (${1:i} ${2:1} ilaa ${3:10}) {",
      "\t$4",
      "}"
    ],
    "description": "For loop statement"
  },
  "While Loop": {
    "prefix": "intay",
    "body": [
      "intay (${1:shuruud}) {",
      "\t$2",
      "}"
    ],
    "description": "While loop statement"
  },
  "Function Declaration": {
    "prefix": "hawl",
    "body": [
      "hawl ${1:magac}(${2:parameters}) {",
      "\t$3",
      "\tceli ${4:value}",
      "}"
    ],
    "description": "Function declaration"
  },
  "Return Statement": {
    "prefix": "celi",
    "body": [
      "celi ${1:qiimaha}$0"
    ],
    "description": "Return statement"
  },
  "Break Statement": {
    "prefix": "jooji",
    "body": [
      "jooji$0"
    ],
    "description": "Break statement"
  },
  "Continue Statement": {
    "prefix": "soco",
    "body": [
      "soco$0"
    ],
    "description": "Continue statement"
  },
  "Try-Catch": {
    "prefix": "isku_day",
    "body": [
      "isku_day {",
      "\t$1",
      "} qabo (${2:khalad}) {",
      "\t$3",
      "}"
    ],
    "description": "Try-catch statement"
  },
  "Throw Statement": {
    "prefix": "throw",
    "body": [
      "throw ${1:\"error message\"}$0"
    ],
    "description": "Throw statement"
  },
  "Import Statement": {
    "prefix": "ka_keen",
    "body": [
      "ka_keen \"${1:module_path}\"$0"
    ],
    "description": "Import statement"
  },
  "Class Declaration": {
    "prefix": "fasalka",
    "body": [
      "fasalka ${1:ClassName} {",
      "\t$2",
      "}"
    ],
    "description": "Class declaration"
  },
  "Class with Inheritance": {
    "prefix": "fasalka_dhaxal",
    "body": [
      "fasalka ${1:ClassName} ka_dhaxal ${2:ParentClass} {",
      "\t$3",
      "}"
    ],
    "description": "Class declaration with inheritance"
  },
  "Input Statement": {
    "prefix": "gelin",
    "body": [
      "gelin(\"${1:prompt}\")$0"
    ],
    "description": "Input statement - reads user input"
  },
  "Type Check": {
    "prefix": "nooc",
    "body": [
      "nooc(${1:variable})$0"
    ],
    "description": "Get type of variable"
  }
}